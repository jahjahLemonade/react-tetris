{"version":3,"sources":["img/bg.png","components/style/StyledDisplay.js","components/Display.js","components/style/StyledStartButton.js","components/StartButton.js","components/style/StyledCell.js","tetrominos.js","components/Cell.js","components/style/StyledStage.js","components/Stage.js","components/style/StyledTetris.js","gameHelper.js","hooks/useStage.js","hooks/useGameStatus.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledDisplay","styled","div","props","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","StyledCell","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","random","randomTech","Math","floor","length","React","memo","StyledStage","height","width","Stage","stage","map","row","cell","x","key","StyledTetrisWrapper","bg","StyledTetris","createStage","Array","from","fill","checkCollision","player","moveX","moveY","y","tech","position","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","c","forEach","v","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","d","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17b84ffd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.a66d5b7e.png\";","import styled from 'styled-components'\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;  \n  font-size: 1rem;\n  outline: none;\n`;","import React from 'react'\nimport { StyledDisplay } from './style/StyledDisplay'\n\nconst Display = ({text, gameOver}) => {\n    return (\n        <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n    )\n}\n\nexport default Display","import styled from 'styled-components'\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-family: Pixel, Arial, Helvetica, sans-seriff;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`; ","import React from 'react'\nimport {StyledStartButton} from './style/StyledStartButton'\n\nconst StartButton = ({callback}) => {\n    return (\n        <StyledStartButton onClick={callback}>Start Button</StyledStartButton>\n    )\n}\n\nexport default StartButton","import styled from 'styled-components'\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`\n","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I : {\n        shape: [\n                [0, 'I', 0, 0],\n                [0, 'I', 0, 0],\n                [0, 'I', 0, 0],\n                [0, 'I', 0, 0]\n               ],\n        color: '80, 227, 230'\n    },\n    J : {\n        shape: [\n                [0, 'J', 0],\n                [0, 'J', 0],\n                ['J', 'J', 0]\n               ],\n        color: '36, 95, 223'\n    },\n    L : {\n        shape: [\n                [0, 'L', 0],\n                [0, 'L', 0],\n                [0, 'L', 'L']\n               ],\n        color: '223, 173, 36'\n    },\n    O : {\n        shape: [\n                ['O', 'O'],\n                ['O', 'O']\n               ],\n        color: '223, 217, 36'\n    },\n    S : {\n        shape: [\n                [0, 'S', 'S'],\n                ['S', 'S', 0],\n                [0, 0, 0]\n               ],\n        color: '48, 221, 56'\n    },\n    T : {\n        shape: [\n                [0, 0, 0],\n                ['T', 'T', 'T'],\n                [0, 'T', 0]\n               ],\n        color: '132, 61, 198'\n    },\n    Z : {\n        shape: [\n                ['Z', 'Z', 0],\n                [0, 'Z', 'Z'],\n                [0, 0, 0]\n               ],\n        color: '227, 78, 78'\n    }\n}\n\nexport const random = () => {\n    const tech = 'IJLOSTZ'\n    const randomTech = \n        tech[Math.floor(Math.random() * tech.length)]\n    return TETROMINOS[randomTech]\n}\n","import React from 'react'\nimport { StyledCell } from './style/StyledCell'\nimport { TETROMINOS} from '../tetrominos'\n\nconst Cell = ({type}) => {\n    return (\n        <StyledCell type={type} color={TETROMINOS[type].color} />\n    \n    )\n}\n\nexport default React.memo(Cell)","import styled from 'styled-components'\n\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #333;\n    width: 100%;\n    max-width: 25vw;\n    background: #111;\n\n `;\n\n ","import React from 'react'\nimport Cell from './Cell'\nimport { StyledStage } from './style/StyledStage'\n\nconst Stage = ({stage}) => {\n    return (\n        <StyledStage width={stage[0].length} height={stage.length}>{stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]}/> ))}</StyledStage>\n    )\n}\n\nexport default Stage","import styled from 'styled-components'\nimport bg from '../../img/bg.png'\n\nexport  const StyledTetrisWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background: url(${bg}) #000;\n    backgroud-size: cover;\n    overflow: hidden;  \n`\n\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    padding: 40px;\n    margin: 0 auto;\n    max-width: 900px;\n\n    aside {\n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n    }\n\n\n`","export const STAGE_WIDTH = 12 \nexport const STAGE_HEIGHT = 20\n\nexport const createStage = () =>\nArray.from(Array(STAGE_HEIGHT), () => \n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n) \n//Come Back and Optimize????  \nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n    for (let y = 0; y < player.tech.length; y += 1) {\n        for(let x = 0; x < player.tech[y].length; x += 1){\n            if(player.tech[y][x]!== 0){\n                if(\n                    !stage[y + player.position.y + moveY] ||\n                    !stage[y + player.position.y + moveY][x + player.position.x + moveX] ||\n                    stage[y + player.position.y + moveY][x + player.position.x + moveX][1] !==\n                        'clear'\n                ) {\n                    return true\n                }\n            }\n        }\n    }\n}","import {useState, useEffect} from 'react'\nimport {createStage} from '../gameHelper'\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage())\n    const [rowsCleared, setRowsCleared] = useState(0)\n\n    useEffect(() => {\n        setRowsCleared(0)\n\n        const sweepRows = newStage => \n            newStage.reduce((ack, row) => {\n                if(row.findIndex(c => c[0] === 0) === -1){\n                    setRowsCleared(prev => prev + 1)\n                    ack.unshift(new Array(newStage[0].length).fill([0, 'clear']))\n                    return ack\n                }\n                ack.push(row)\n                return ack \n            }, []) \n            \n        const updateStage = prevStage => {\n            const newStage = prevStage.map(row =>\n                row.map(c => (c[1] === 'clear' ? [0, 'clear'] : c))\n            )\n        \n            player.tech.forEach((row, y) => {\n                row.forEach((v, x) => {\n                    if(v !== 0) {\n                       newStage[y + player.position.y][x + player.position.x] = [v, `${player.collided ? 'merged' : 'clear'}`] \n                    }\n                })\n            })\n            if(player.collided){\n                resetPlayer()\n                return sweepRows(newStage)\n            }\n            return newStage\n        }\n        setStage(prev => updateStage(prev))\n    }, [player, resetPlayer])\n    \n    return [stage, setStage, rowsCleared]\n}","import {useState, useCallback, useEffect} from 'react'\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0)\n    const [rows, setRows] = useState(0)\n    const [level, setLevel] = useState(0)\n\n    const linePoints = [40, 100, 300, 1200]\n    const calcScore = useCallback(() => {\n        if(rowsCleared > 0){\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1 ))\n            setRows(prev => prev + rowsCleared)\n        }\n    }, [level, linePoints, rowsCleared])\n    \n    useEffect(() => {\n        calcScore()\n    }, [calcScore, rowsCleared, score])\n    \n    return [score, setScore, rows, setRows,level, setLevel]\n}","import React, {useState} from 'react'\nimport Display from './Display'\nimport StartButton from './StartButton'\nimport Stage from './Stage'\nimport {StyledTetrisWrapper, StyledTetris} from './style/StyledTetris'\nimport { usePlayer } from '../hooks/usePlayer'\nimport { useStage } from '../hooks/useStage'\nimport { createStage, checkCollision } from '../gameHelper'\nimport { useInterval } from '../hooks/useInterval'\nimport { useGameStatus } from '../hooks/useGameStatus'\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null)\n    const [gameOver, setGameOver] = useState(false)\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer()\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer)\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared)\n\n    const movePlayer = (d) => {\n        if(!checkCollision(player, stage, {x: d, y: 0}))\n        updatePlayerPos({x: d, y: 0})\n    }\n    const startGame = () => {\n        setStage(createStage())\n        setDropTime(500)\n        resetPlayer()\n        setScore(0)\n        setLevel(0)\n        setRows(0)\n        setGameOver(false)\n    }\n    const drop = () => {\n        if(rows > (level + 1) * 10){\n            setLevel(prev => prev + 1)\n            setDropTime(500 / (level + 1) + 200)\n        }\n        if(!checkCollision(player, stage, { x: 0, y: 1})){\n            updatePlayerPos({x: 0, y: 1, collided: false})\n        } else {\n            if(player.position.y < 1){\n                console.log(\"Game Over!!!\")\n                setGameOver(true)\n                setDropTime(null)\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true})\n        }\n       \n    }\n\n    const keyUp = ({keyCode}) => {\n        if(!gameOver){\n            if(keyCode === 40){\n                setDropTime(500 / (level + 1) + 200)\n            }\n        }\n    } \n    const dropPlayer = () => {\n        setDropTime(null)\n        drop()\n\n    }\n    const move = ({keyCode}) => {\n        if(!gameOver){\n            if(keyCode === 37){\n                movePlayer(-1)\n            }else if(keyCode === 39){\n                movePlayer(1)\n            }else if(keyCode === 40){\n                dropPlayer()\n            }\n            else if(keyCode === 38){\n                playerRotate(stage, 1)\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop()\n    }, dropTime)\n    return (\n        <StyledTetrisWrapper role='buttton' tabIndex='0' onKeyDown={e => move(e)} onKeyUp={keyUp}>\n            <StyledTetris>\n            <Stage stage={stage}/>\n            <aside>\n                {gameOver ? (<Display gameOver={gameOver} text='Game Over Kiddo' />) \n                : ( <div>\n                    <Display text={`Score: ${score}`}/>\n                    <Display text={`Rows: ${rows}`}/>\n                    <Display text={`Level: ${level}`}/>\n                </div>)}\n            </aside>\n        <StartButton callback={startGame} />\n        </StyledTetris>\n        </StyledTetrisWrapper>\n    )\n}\nexport default Tetris"," import {useState, useCallback} from 'react'\n import {random, TETROMINOS} from '../tetrominos'\nimport { STAGE_WIDTH, checkCollision } from '../gameHelper'\n\n export const usePlayer = () => {\n    const [player, setPlayer] = useState({\n        position: { x: 0, y: 0},\n        tech: TETROMINOS[0].shape,\n        collided: false,\n    })\n\n    const rotate = (matrix, d) => {\n        const rotatedTetro = matrix.map((_, index) => \n            matrix.map(col => col[index]),\n        )\n        if(d > 0) return rotatedTetro.map(row => row.reverse())\n        return rotatedTetro.reverse()\n    }\n\n    const playerRotate = (stage, d) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player))\n        clonedPlayer.tech = rotate(clonedPlayer.tech, d)\n        \n        const position = clonedPlayer.position.x\n        let offset = 1\n        while(checkCollision(clonedPlayer, stage, { x: 0, y: 0})) {\n            clonedPlayer.position.x += offset\n            offset = -(offset + (offset > 0 ? 1 : -1))\n            if(offset > clonedPlayer.tech[0].length) {\n                rotate(clonedPlayer.tech, -d)\n                clonedPlayer.position.x = position\n                return\n            }\n        }\n        setPlayer(clonedPlayer)\n    }\n\n    const updatePlayerPos = ({x, y, collided}) => {\n        setPlayer(prev => ({\n            ...prev,\n            position: { x: (prev.position.x += x), y: (prev.position.y += y)}, collided\n        }))\n    }\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            position: {x: STAGE_WIDTH / 2 - 2, y : 0},\n            tech: random().shape,\n            collided: false\n        })\n    }, [])\n    return [player, updatePlayerPos, resetPlayer, playerRotate]\n }\n ","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Tetris />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}